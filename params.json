{"tagline":"It's an easy-to-use, object-orienlated library for Server-Sent Events","google":"","name":"Libsse-php","body":"libSSE-php\r\n==========\r\n\r\nAn easy-to-use, object-orienlated library for Server-Sent Events\r\n\r\nUpdates\r\n=========\r\n\r\n1. Cleaner and improved code\r\n2. Add new event type: SSETimedEvent allows you to send data periodically in a easy way.\r\n\r\nQuick use\r\n==========\r\n\r\nServer-side(PHP):\r\n\r\n\t<?php\r\n\trequire_once('./src/libsse.php');//include the library\r\n\t\r\n\t//create the event handler\r\n\tclass YourEventHandler extends SSEEvent {\r\n\t\tpublic function update(){\r\n\t\t\t//Here's the place to send data\r\n\t\t\treturn 'Hello, world!';\r\n\t\t}\r\n\t\tpublic function check(){\r\n\t\t\t//Here's the place to check when the data needs update\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\t\r\n\t$sse = new SSE();//create a libSSE instance\r\n\t$sse->addEventListener('event_name',new YourEventHandler());//register your event handler\r\n\t$sse->start();//start the event loop\r\n\t?>\r\n\r\nClient-side(javascript):\r\n\r\n\tvar sse = new EventSource('path/to/your/sse/script.php');\r\n\tsse.addEventListener('event_name',function(e){\r\n\t\tvar data = e.data;\r\n\t\t//handle your data here\r\n\t},false);\r\n\r\nCompatibility\r\n==============\r\n\r\nBecause server-sent events is a new standard and still in flux, only certain browsers support it.\r\nHowever, polyfill for server-sent events is avaliable. Also on shared hosting, it may disable PHP's `set_time_limit` function and the library may not work as excepted. There's some settings in the library that can fix it.\r\n\r\nSettings\r\n===========\r\n\r\nAfter you created the libSSE instance, there's some settings for you to control the behaviour. Below is the settings provided by the library.\r\n\r\n\t<?php\r\n\trequire_once('./src/libsse.php');\r\n\t$sse = new SSE();\r\n\t\r\n\t$sse->exec_limit = 10; //the execution time of the loop in seconds. Default: 600. Set to 0 to allow the script to run as long as possible.\r\n\t$sse->sleep_time = 1; //The time to sleep after the data has been sent in seconds. Default: 0.5.\r\n\t$sse->client_reconnect = 10; //the time for the client to reconnect after the connection has lost in seconds. Default: 1.\r\n\t$sse->use_chunked_encodung = true; //Use chunked encoding. Some server may get problems with this and it defaults to false\r\n\t?>\r\n\r\nAs this library is new, only these settings are avaliable.\r\n\r\nDevelopment\r\n============\r\n\r\nThis is an active project. If you want to help me please suggest ideas to me and track issues or find bugs.\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}